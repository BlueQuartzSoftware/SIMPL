/*
This file is automatically generated during each CMake run. DO NOT EDIT the
generated file. Edit the original file
*/


#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winconsistent-missing-override"
#endif


#include <QtCore/QCoreApplication>

#include "SIMPLib/SIMPLib.h"

#ifdef SIMPL_Group_FILTERS
#include "SIMPLib/Filtering/FilterManager.h"
#include "SIMPLib/Plugin/ISIMPLibPlugin.h"
#include "SIMPLib/Plugin/SIMPLibPluginLoader.h"
#include "SIMPLib/Filtering/QMetaObjectUtilities.h"
#endif

#include "UnitTestSupport.hpp"

@FilterTestIncludes@


// -----------------------------------------------------------------------------
//  Use test framework
// -----------------------------------------------------------------------------
int main(int argc, char** argv)
{
  int err = EXIT_SUCCESS;

  // Instantiate the QCoreApplication that we need to get the current path and load plugins.
  QCoreApplication app(argc, argv);
  QCoreApplication::setOrganizationName("Your Company");
  QCoreApplication::setOrganizationDomain("Your Domain");
  QCoreApplication::setApplicationName("@PluginName@");

#ifdef SIMPL_Group_FILTERS
  // Register all the filters including trying to load those from Plugins
  FilterManager* fm = FilterManager::Instance();
  SIMPLibPluginLoader::LoadPluginFilters(fm);

  // Register the special objects with the QMetaObject system
  QMetaObjectUtilities::RegisterMetaTypes();
#endif

  /* ======================================
  * Start the testing section
  */

@TestMainFunctors@

  /* 
  * End the testing section
  * ====================================== */

  PRINT_TEST_SUMMARY();

  return err;
}



#ifdef __clang__
#pragma clang diagnostic pop
#endif

#pragma once

#include <QtCore/QString>

#define REMOVE_TEST_FILES 1

/* %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 *
 * THIS FILE IS AUTO GENERATED AT CMAKE TIME. DO NOT EDIT THIS FILE. EDIT THE ORIGINAL TEMPLATE FILE
 * LOCATED AT @SIMPLProj_SOURCE_DIR@/Test/TestFileLocations.h.in
 *
 *
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  */


namespace UnitTest
{
  inline const QString DataDir("@DREAM3D_DATA_DIR@");
  inline const QString TestTempDir("@TEST_TEMP_DIR@");
  inline const QString DREAM3DProjDir("@DREAM3DProj_SOURCE_DIR@");


  namespace GenerateTiltSeriesTest
  {
    inline const QString TestFile1("@DREAM3D_DATA_DIR@/Data/GenerateTiltSeries/GenerateTiltSeriesTest.dream3d");
  } // namespace GenerateTiltSeriesTest

  namespace RecursivePipelineTest
  {
    inline const QString TestDir("@TEST_TEMP_DIR@");
    inline const QString InputDREAM3DFile("@TEST_TEMP_DIR@/InputDREAM3DFile.dream3d");
    inline const QString OutputDREAM3DFile("@TEST_TEMP_DIR@/OutputDREAM3DFile.dream3d");
  }

  namespace ExtractVertexGeometryTest
  {
    inline const QString TestFile("@TEST_TEMP_DIR@/TestFile1.dream3d");
    inline const QString TestFileXdmf("@TEST_TEMP_DIR@/TestFile1.xdmf");
  }

  namespace DataArrayTest
  {
    inline const QString TestDir("@TEST_TEMP_DIR@/DataArrayTest");
    inline const QString TestFile("@TEST_TEMP_DIR@/DataArrayTest/DataArrayTest.h5");
  }

  namespace DataContainerBundleTest
  {
    inline const QString TestDir("@TEST_TEMP_DIR@/DataContainerBundleTest");
    inline const QString TestFile("@TEST_TEMP_DIR@/DataContainerBundleTest/DataContainerBundleTest.h5");
  }

  namespace FeatureIdsTest
  {
    inline constexpr size_t XSize = 3;
    inline constexpr size_t YSize = 4;
    inline constexpr size_t ZSize = 5;
    inline constexpr size_t Offset = 200;
  }
  
  namespace FindDerivativesFilterTest
  {
    inline const QString TestFile1("@TEST_TEMP_DIR@/TestFile1.txt");
    inline const QString TestFile2("@TEST_TEMP_DIR@/TestFile2.txt");
  }

  namespace GenerateColorTableTest
  {
    inline const QString ImageFilePath("@TEST_TESTFILES_DIR@/GenerateColorTable/ColorTableTestFile.txt");
    inline const QString TestFilesDir("@TEST_TESTFILES_DIR@");
    inline const QString BlackBlueWhiteFile("@TEST_TESTFILES_DIR@/GenerateColorTable/BlackBlueWhite.txt");
    inline const QString BlackBodyRadiationFile("@TEST_TESTFILES_DIR@/GenerateColorTable/BlackBodyRadiation.txt");
    inline const QString BlackOrangeWhiteFile("@TEST_TESTFILES_DIR@/GenerateColorTable/BlackOrangeWhite.txt");
    inline const QString BlueToYellowFile("@TEST_TESTFILES_DIR@/GenerateColorTable/BlueToYellow.txt");
    inline const QString ColdAndHotFile("@TEST_TESTFILES_DIR@/GenerateColorTable/ColdAndHot.txt");
    inline const QString GrayscaleFile("@TEST_TESTFILES_DIR@/GenerateColorTable/Grayscale.txt");
    inline const QString HazeFile("@TEST_TESTFILES_DIR@/GenerateColorTable/Haze.txt");
    inline const QString HsvFile("@TEST_TESTFILES_DIR@/GenerateColorTable/Hsv.txt");
    inline const QString JetFile("@TEST_TESTFILES_DIR@/GenerateColorTable/Jet.txt");
    inline const QString RainbowFile("@TEST_TESTFILES_DIR@/GenerateColorTable/Rainbow.txt");
    inline const QString RainbowBlendedBlackFile("@TEST_TESTFILES_DIR@/GenerateColorTable/RainbowBlendedBlack.txt");
    inline const QString RainbowBlendedGreyFile("@TEST_TESTFILES_DIR@/GenerateColorTable/RainbowBlendedGrey.txt");
    inline const QString RainbowBlendedWhiteFile("@TEST_TESTFILES_DIR@/GenerateColorTable/RainbowBlendedWhite.txt");
    inline const QString RainbowDesaturatedFile("@TEST_TESTFILES_DIR@/GenerateColorTable/RainbowDesaturated.txt");
    inline const QString XRayFile("@TEST_TESTFILES_DIR@/GenerateColorTable/XRay.txt");
  }

  namespace VtkGrainIdIOTest
  {
    inline const QString TestFile("@TEST_TEMP_DIR@/VtkGrainIdIOTest.vtk");
    inline constexpr size_t XSize = 5;
    inline constexpr size_t YSize = 4;
    inline constexpr size_t ZSize = 3;
    inline constexpr size_t Offset = 300;
  }

  namespace VTKFileWritersTest
  {
    inline const QString TestFile("@TEST_TEMP_DIR@/VtkIOTest.vtk");
    inline constexpr size_t XSize = 2;
    inline constexpr size_t YSize = 10;
    inline constexpr size_t ZSize = 5;
    inline constexpr size_t Offset = 66;
  }

  namespace NeighborListTest
  {
    inline const QString TestDir("@TEST_TEMP_DIR@/NeighborListTest");
  }

  namespace SyntheticBuilderTest
  {
    inline const QString TestDir("@TEST_TEMP_DIR@/SyntheticBuilderTest");
    inline const QString CsvFile("@TEST_TEMP_DIR@/SyntheticBuilderTest/SyntheticBuilderTest.csv");
    inline const QString OutputFile("@TEST_TEMP_DIR@/SyntheticBuilderTest/SyntheticBuilderTest.h5");
    inline const QString VtkOutputFile("@TEST_TEMP_DIR@/SyntheticBuilderTest/SyntheticBuilderTest.vtk");

  }

  namespace FindNeighborTest
  {
    inline const QString TestDir("@TEST_TEMP_DIR@/FindNeighborTest");
    inline const QString OutputFile("@TEST_TEMP_DIR@/FindNeighborTest/FindNeighborTest.h5");
    inline const QString StatsFile("@TEST_TEMP_DIR@/FindNeighborTest/FindNeighborTest_Stats.h5");
    inline const QString OutputFile2("@TEST_TEMP_DIR@/FindNeighborTest/OtherTestOutput.h5");
    inline const QString VtkOutputFile("@TEST_TEMP_DIR@/FindNeighborTest/FindNeighborTest.vtk");
  }

  namespace DREAM3DSettingsTest
  {
    inline const QString TestFile("@TEST_TEMP_DIR@/DREAM3DSettingsTest/DREAM3DSettingsTest.json");
  }

  namespace StatsDataTest
  {
    inline const QString TestDir("@TEST_TEMP_DIR@/StatsDataTest");
    inline const QString TestFile("@TEST_TEMP_DIR@/StatsDataTest/StatsDataTest.h5");
    inline const QString TestFile2("@TEST_TEMP_DIR@/StatsDataTest/StatsDataTest_rewrite.h5");
  }

  namespace RawBinaryReaderTest
  {
    inline const QString TestDir("@TEST_TEMP_DIR@/RawBinaryReaderTest");
    inline const QString OutputFile("@TEST_TEMP_DIR@/RawBinaryReaderTest/Output.bin");
  }

  namespace SyntheticTest
  {
    inline const QString TestDir("@TEST_TEMP_DIR@/SyntheticTest");
    inline const QString MatrixPrecipitateInputFile("@DREAM3D_SUPPORT_DIR@/Data/2Phase_Matrix_Precipitate.dream3d");
    inline const QString OutputFile("@TEST_TEMP_DIR@/SyntheticTestOutput.dream3d");
  }

  namespace FilterParametersRWTest
  {
    inline const QString TestDir("@TEST_TEMP_DIR@/FilterParametersRWTest");
    inline const QString ArraySelectionFile("@TEST_TEMP_DIR@/FilterParametersRWTest/ArraySelectionFile.h5");
    inline const QString ArraySelectionFileQSettings("@TEST_TEMP_DIR@/FilterParametersRWTest/ArraySelectionFile.ini");
    inline const QString GenericExampleFile("@TEST_TEMP_DIR@/FilterParametersRWTest/GenericExampleFile.h5");
    inline const QString GenericExampleFileQSettings("@TEST_TEMP_DIR@/FilterParametersRWTest/GenericExampleFile.ini");
    inline const QString ThresholdFile("@TEST_TEMP_DIR@/FilterParametersRWTest/ThresholdFile.h5");
    inline const QString ThresholdFileQSettings("@TEST_TEMP_DIR@/FilterParametersRWTest/ThresholdFile.ini");
    inline const QString TestFile_1("@TEST_TEMP_DIR@/FilterParametersRWTest/TestFile_1.h5");
    inline const QString TestFile_2("@TEST_TEMP_DIR@/FilterParametersRWTest/TestFile_2.h5");
    inline const QString TestFile_3("@TEST_TEMP_DIR@/FilterParametersRWTest/TestFile_3.h5");
  }

  namespace PFTest
  {
    inline const QString TestDir("@TEST_TEMP_DIR@/PoleFigureTest/");
  }

  namespace AngleFileLoaderTest
  {
    inline const QString TestDir("@TEST_TEMP_DIR@/AngleFileLoaderTest");
    inline const QString OutputFile("@TEST_TEMP_DIR@/AngleFileLoaderTest/AngleTestFile.txt");
  }

  namespace LambertRWTest
  {
    inline const QString TestFile("@TEST_TEMP_DIR@/LambertRWTest.h5");
  }


  namespace FilterParametersRWTest
  {
    inline const QString OutputFile("@TEST_TEMP_DIR@/FilterParametersRWTest/OutputFile.json");
    inline const QString OutputDir("@TEST_TEMP_DIR@/FilterParametersRWTest/");
  }

  namespace ExecuteProcessTest
  {
    inline const QString QMakeVersionString("@QMAKE_VERSION@");
    inline const QString QMakeLocation("@QtQMake_location@");

    inline const QString CMakeLocation("@CMAKE_COMMAND@");
    inline const QString CMakeVersionString("@CMake_VersionString@");
  }

  namespace ReadASCIIDataTest
  {
    inline const QString TestFile1("@TEST_TEMP_DIR@/TestFile1.txt");
    inline const QString TestFile2("@TEST_TEMP_DIR@/TestFile2.txt");
  }

  namespace WriteTriangleGeometryTest
  {
    inline const QString NodesFile("@TEST_TEMP_DIR@/WriteTriangleGeometryNodesFile.txt");
    inline const QString TrianglesFile("@TEST_TEMP_DIR@/WriteTriangleGeometryTrianglesFile.txt");
  }
  
  namespace FeatureDataCSVWriterTest
  {
   inline const QString OutputFile("@TEST_TEMP_DIR@/FeatureDataCSVOutputTestFile.txt");
  }

  namespace RotateSampleRefFrameTest
  {
    inline const QString TestFile1("@DREAM3D_DATA_DIR@/Data/RotateSampleRefFrame/RotateSampleRefFrameTest.dream3d");
  }

  namespace RestUnitTest
  {
    // Server Configuration File
    inline const QString RestServerConfigFilePath("@CMAKE_RUNTIME_OUTPUT_DIRECTORY@/RESTServer.ini");
    // Test Pipeline File
    inline const QString SmallIN100ArchivePipeline("@DREAM3DProj_SOURCE_DIR@/Support/PrebuiltPipelines/Workshop/EBSD Reconstruction/(01) SmallIN100 Archive.json");
    // Location of Test Data
    inline const QString SmallIN100ArchiveInputFolderPath("@DREAM3D_DATA_DIR@/Data/SmallIN100");
    // Output File Location
    inline const QString SmallIN100ArchiveOutputFilePath("@TEST_TEMP_DIR@/SmallIN100.h5ebsd");

    // Additional Pipeline file locations
    inline const QString RESTErrorPipelineFilePath("@SIMPLib_SOURCE_DIR@/REST/Testing/Cxx/RESTErrorPipeline.json");
    inline const QString RESTFileIOPipelineFilePath("@SIMPLib_SOURCE_DIR@/REST/Testing/Cxx/RESTFileIOPipeline.json");
    inline const QString RESTPipelineFilePath("@SIMPLib_SOURCE_DIR@/REST/Testing/Cxx/RESTPipeline.json");
    // Output/Temp .dream3d files to write and read
    inline const QString RESTFileIOInputDataFilePath("@TEST_TEMP_DIR@/RESTFileIOInputData.dream3d");
    inline const QString RESTFileIOOutputDataFilePath("@TEST_TEMP_DIR@/RESTFileIOOutputData.dream3d");
  }
}

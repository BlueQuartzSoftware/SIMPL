/* This file is auto generated. DO NOT EDIT THIS FILE. Edit the original template file and then rerun CMake
* again to regenerate this file.
*/

#ifndef _simplib_H_
#define _simplib_H_

/* Define to 1 if SIMPLib was built as a dynamic library */
#cmakedefine SIMPLib_BUILT_AS_DYNAMIC_LIB @SIMPLib_BUILT_AS_DYNAMIC_LIB@

/* ****************************************************************************
* These define what libraries SIMPL is using.
**************************************************************************** */

/* Did we compile with HDF5 support */
#define SIMPL_HDF5_SUPPORT @SIMPL_HDF5_SUPPORT@

/* define to 1 if we are using parallel algorithms */
#cmakedefine SIMPL_USE_PARALLEL_ALGORITHMS @SIMPL_USE_PARALLEL_ALGORITHMS@

/* define to 1 if we are using the Eigen Library*/
#cmakedefine SIMPL_USE_EIGEN @EIGEN_FOUND@

/* define to 1 if we are supporting ITK Filters */
#cmakedefine SIMPL_USE_ITK

/* ****************************************************************************
* These define features that SIMPL will have when compiled.
**************************************************************************** */

/* define to 1 if we are enabling NTFS file checking */
#cmakedefine SIMPL_NTFS_FILE_CHECK @SIMPL_NTFS_FILE_CHECK@


/* ****************************************************************************
* These define what source groups are being compiled
**************************************************************************** */

/* define to 1 if we are using the SIMPL_Group_BASE*/
#cmakedefine SIMPL_Group_BASE @SIMPL_Group_BASE@

/* define to 1 if we are using the SIMPL_Group_FILTERS*/
#cmakedefine SIMPL_Group_FILTERS @SIMPL_Group_FILTERS@

/* define to 1 if we are using the SIMPL_Group_PLUGIN*/
#cmakedefine SIMPL_Group_PLUGIN @SIMPL_Group_PLUGIN@

/* define to 1 if we are using the SIMPL_Group_WIDGETS*/
#cmakedefine SIMPL_Group_WIDGETS @SIMPL_Group_WIDGETS@

/* define to 1 if we are building the Test Filters */
#cmakedefine SIMPL_BUILD_TEST_FILTERS

/* ****************************************************************************
* These define misc items from the build
**************************************************************************** */

/* Defines the type of Release that is being built */
#define SIMPLProj_RELEASE_TYPE "@SIMPLProj_RELEASE_TYPE@"

/* Include the Overall Configuration header file */
#include "@PROJECT_NAME@/@CMP_CONFIGURATION_FILE_NAME@"

/* Include the Typedefs Header */
#include "@PROJECT_NAME@/@CMP_TYPES_FILE_NAME@"

/* Include the DLL export preprocessor defines */
#include "SIMPLib/Common/SIMPLibDLLExport.h"

/* We are going to disable some warnings just to get a grip on all the warnings that get produced
* during an MSVC build */
#cmakedefine SIMPLib_DISABLE_MSVC_WARNINGS @SIMPLib_DISABLE_MSVC_WARNINGS@

#define __SHOW_DEBUG_MSG__ false

#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winconsistent-missing-override"
#endif

#if (_MSC_VER >= 1)

  #pragma warning (error: 4715) /* Not all control points return a value */
  #pragma warning (error: 4258) /* Nested Variable Definitions are ignored */
    #ifdef SIMPLib_DISABLE_MSVC_WARNINGS
      #pragma warning(disable:4244)
      #pragma warning(disable:4267)
      #pragma warning(disable:4305)
    #endif

#endif

#ifdef QT_CORE_LIB
#include <QtCore/QMetaType>
Q_DECLARE_METATYPE(uint8_t)
Q_DECLARE_METATYPE(int8_t)
Q_DECLARE_METATYPE(uint16_t)
Q_DECLARE_METATYPE(int16_t)
Q_DECLARE_METATYPE(uint32_t)
Q_DECLARE_METATYPE(int32_t)
Q_DECLARE_METATYPE(uint64_t)
Q_DECLARE_METATYPE(int64_t)
#endif


#endif /* _simplib_H_ */

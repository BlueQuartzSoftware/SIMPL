#ifndef _TestFileLocation_h_
#define _TestFileLocation_h_

#include <QtCore/QString>

#define REMOVE_TEST_FILES 1

/* %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 *
 * THIS FILE IS AUTO GENERATED AT CMAKE TIME. DO NOT EDIT THIS FILE. EDIT THE ORIGINAL TEMPLATE FILE
 * LOCATED AT @SIMPLProj_SOURCE_DIR@/Test/TestFileLocations.h.in
 *
 *
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  */


namespace UnitTest
{

  const QString DataDir("@DREAM3D_DATA_DIR@");
  const QString TestTempDir("@TEST_TEMP_DIR@");
  const QString DREAM3DProjDir("@DREAM3DProj_SOURCE_DIR@");

  namespace RecursivePipelineTest
  {
    const QString TestDir("@TEST_TEMP_DIR@");
    const QString InputDREAM3DFile("@TEST_TEMP_DIR@/InputDREAM3DFile.dream3d");
    const QString OutputDREAM3DFile("@TEST_TEMP_DIR@/OutputDREAM3DFile.dream3d");
  }

  namespace DataArrayTest
  {
    const QString TestDir("@TEST_TEMP_DIR@/DataArrayTest");
    const QString TestFile("@TEST_TEMP_DIR@/DataArrayTest/DataArrayTest.h5");
  }

  namespace DataContainerBundleTest
  {
    const QString TestDir("@TEST_TEMP_DIR@/DataContainerBundleTest");
    const QString TestFile("@TEST_TEMP_DIR@/DataContainerBundleTest/DataContainerBundleTest.h5");
  }

  namespace FeatureIdsTest
  {
    static const size_t XSize = 3;
    static const size_t YSize = 4;
    static const size_t ZSize = 5;
    static const size_t Offset = 200;
  }
  
  namespace FindDerivativesFilterTest
  {
   const QString TestFile1("@TEST_TEMP_DIR@/TestFile1.txt");
   const QString TestFile2("@TEST_TEMP_DIR@/TestFile2.txt");
  }

  namespace GenerateColorTableTest
  {
    const QString ImageFilePath("@CMAKE_LIBRARY_OUTPUT_DIRECTORY@/Data/SmallIN100/Slice_1.ang");
    const QString ASCIIImagesDir("@TEST_IMAGEASCII_DIR@");
    const QString BlackBlueWhiteFile("@TEST_IMAGEASCII_DIR@/BlackBlueWhite.txt");
    const QString BlackBodyRadiationFile("@TEST_IMAGEASCII_DIR@/BlackBodyRadiation.txt");
    const QString BlackOrangeWhiteFile("@TEST_IMAGEASCII_DIR@/BlackOrangeWhite.txt");
    const QString BlueToYellowFile("@TEST_IMAGEASCII_DIR@/BlueToYellow.txt");
    const QString ColdAndHotFile("@TEST_IMAGEASCII_DIR@/ColdAndHot.txt");
    const QString GrayscaleFile("@TEST_IMAGEASCII_DIR@/Grayscale.txt");
    const QString HazeFile("@TEST_IMAGEASCII_DIR@/Haze.txt");
    const QString HsvFile("@TEST_IMAGEASCII_DIR@/Hsv.txt");
    const QString JetFile("@TEST_IMAGEASCII_DIR@/Jet.txt");
    const QString RainbowFile("@TEST_IMAGEASCII_DIR@/Rainbow.txt");
    const QString RainbowBlendedBlackFile("@TEST_IMAGEASCII_DIR@/RainbowBlendedBlack.txt");
    const QString RainbowBlendedGreyFile("@TEST_IMAGEASCII_DIR@/RainbowBlendedGrey.txt");
    const QString RainbowBlendedWhiteFile("@TEST_IMAGEASCII_DIR@/RainbowBlendedWhite.txt");
    const QString RainbowDesaturatedFile("@TEST_IMAGEASCII_DIR@/RainbowDesaturated.txt");
    const QString XRayFile("@TEST_IMAGEASCII_DIR@/XRay.txt");
  }

  namespace VtkGrainIdIOTest
  {
    const QString TestFile("@TEST_TEMP_DIR@/VtkGrainIdIOTest.vtk");
    static const size_t XSize = 5;
    static const size_t YSize = 4;
    static const size_t ZSize = 3;
    static const size_t Offset = 300;
  }

  namespace VTKFileWritersTest
  {
    static const QString TestFile("@TEST_TEMP_DIR@/VtkIOTest.vtk");
    static const size_t XSize = 2;
    static const size_t YSize = 10;
    static const size_t ZSize = 5;
    static const size_t Offset = 66;
  }

  namespace NeighborListTest
  {
    const QString TestDir("@TEST_TEMP_DIR@/NeighborListTest");
  }

  namespace SyntheticBuilderTest
  {
    const QString TestDir("@TEST_TEMP_DIR@/SyntheticBuilderTest");
    const QString CsvFile("@TEST_TEMP_DIR@/SyntheticBuilderTest/SyntheticBuilderTest.csv");
    const QString OutputFile("@TEST_TEMP_DIR@/SyntheticBuilderTest/SyntheticBuilderTest.h5");
    const QString VtkOutputFile("@TEST_TEMP_DIR@/SyntheticBuilderTest/SyntheticBuilderTest.vtk");

  }

  namespace FindNeighborTest
  {
    const QString TestDir("@TEST_TEMP_DIR@/FindNeighborTest");
    const QString OutputFile("@TEST_TEMP_DIR@/FindNeighborTest/FindNeighborTest.h5");
    const QString StatsFile("@TEST_TEMP_DIR@/FindNeighborTest/FindNeighborTest_Stats.h5");
    const QString OutputFile2("@TEST_TEMP_DIR@/FindNeighborTest/OtherTestOutput.h5");
    const QString VtkOutputFile("@TEST_TEMP_DIR@/FindNeighborTest/FindNeighborTest.vtk");
  }

  namespace DREAM3DSettingsTest
  {
    const QString TestFile("@TEST_TEMP_DIR@/DREAM3DSettingsTest/DREAM3DSettingsTest.json");
  }

  namespace StatsDataTest
  {
    const QString TestDir("@TEST_TEMP_DIR@/StatsDataTest");
    const QString TestFile("@TEST_TEMP_DIR@/StatsDataTest/StatsDataTest.h5");
    const QString TestFile2("@TEST_TEMP_DIR@/StatsDataTest/StatsDataTest_rewrite.h5");
  }

  namespace RawBinaryReaderTest
  {
    const QString TestDir("@TEST_TEMP_DIR@/RawBinaryReaderTest");
    const QString OutputFile("@TEST_TEMP_DIR@/RawBinaryReaderTest/Output.bin");
  }

  namespace SyntheticTest
  {
    const QString TestDir("@TEST_TEMP_DIR@/SyntheticTest");
    const QString MatrixPrecipitateInputFile("@DREAM3D_SUPPORT_DIR@/Data/2Phase_Matrix_Precipitate.dream3d");
    const QString OutputFile("@TEST_TEMP_DIR@/SyntheticTestOutput.dream3d");
  }

  namespace FilterParametersRWTest
  {
    const QString TestDir("@TEST_TEMP_DIR@/FilterParametersRWTest");
    const QString ArraySelectionFile("@TEST_TEMP_DIR@/FilterParametersRWTest/ArraySelectionFile.h5");
    const QString ArraySelectionFileQSettings("@TEST_TEMP_DIR@/FilterParametersRWTest/ArraySelectionFile.ini");
    const QString GenericExampleFile("@TEST_TEMP_DIR@/FilterParametersRWTest/GenericExampleFile.h5");
    const QString GenericExampleFileQSettings("@TEST_TEMP_DIR@/FilterParametersRWTest/GenericExampleFile.ini");
    const QString ThresholdFile("@TEST_TEMP_DIR@/FilterParametersRWTest/ThresholdFile.h5");
    const QString ThresholdFileQSettings("@TEST_TEMP_DIR@/FilterParametersRWTest/ThresholdFile.ini");
    const QString TestFile_1("@TEST_TEMP_DIR@/FilterParametersRWTest/TestFile_1.h5");
    const QString TestFile_2("@TEST_TEMP_DIR@/FilterParametersRWTest/TestFile_2.h5");
    const QString TestFile_3("@TEST_TEMP_DIR@/FilterParametersRWTest/TestFile_3.h5");
  }

  namespace PFTest
  {
    const QString TestDir("@TEST_TEMP_DIR@/PoleFigureTest/");
  }

  namespace AngleFileLoaderTest
  {
    const QString TestDir("@TEST_TEMP_DIR@/AngleFileLoaderTest");
    const QString OutputFile("@TEST_TEMP_DIR@/AngleFileLoaderTest/AngleTestFile.txt");
  }

  namespace LambertRWTest
  {
    const QString TestFile("@TEST_TEMP_DIR@/LambertRWTest.h5");
  }


  namespace FilterParametersRWTest
  {
    const QString OutputFile("@TEST_TEMP_DIR@/FilterParametersRWTest/OutputFile.json");
    const QString OutputDir("@TEST_TEMP_DIR@/FilterParametersRWTest/");
  }

  namespace ExecuteProcessTest
  {
    const QString QMakeVersionString("@QMAKE_VERSION@");
    const QString QMakeLocation("@QtQMake_location@");

    const QString CMakeLocation("@CMAKE_COMMAND@");
    const QString CMakeVersionString("@CMake_VersionString@");
  }

  namespace ReadASCIIDataTest
  {
   const QString TestFile1("@TEST_TEMP_DIR@/TestFile1.txt");
   const QString TestFile2("@TEST_TEMP_DIR@/TestFile2.txt");
  }
}

#endif
